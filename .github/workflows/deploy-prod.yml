# Sample workflow for building and deploying an Astro site to GitHub Pages
#
# To get started with Astro see: https://docs.astro.build/en/getting-started/
#
name: Deploy to PROD

on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "prod-web"
  cancel-in-progress: false

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: "22"
          cache: npm
          cache-dependency-path: ./package-lock.json

      - name: Install dependencies and build
        run: |
          npm ci
          npx --no-install astro build
        working-directory: .
        env:
          # NODE_ENV: production
          PUBLIC_FRONT_DOMAIN: "https://kenshiata.studio"
          PUBLIC_API_DOMAIN: "https://api.kenshiata.studio"
          PUBLIC_WEBSOKET: "wss://ws.kenshiata.studio"

      - name: Upload website files
        uses: actions/upload-artifact@v4.4.0
        with:
          name: build-site
          path: ./dist
          retention-days: 2

  deploy:
    runs-on: ubuntu-latest
    needs: build
    name: Deploy to AWS S3
    steps:
      - name: Download built website files
        uses: actions/download-artifact@v4.1.7
        with:
          name: build-site
          path: ./dist

      - name: "aws s3 sync"
        uses: jakejarvis/s3-sync-action@master
        with:
          args: --follow-symlinks --delete --cache-control "max-age=7200"
        env:
          AWS_S3_BUCKET: "kenshiata-front-web-prod"
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: "eu-west-1"
          SOURCE_DIR: "dist"
